unit uTarefa1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, uspQuery, FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat, FireDAC.Phys.SQLiteDef, FireDAC.Phys,
  FireDAC.Phys.SQLite;

type
  TFTarefa1 = class(TForm)
    MemoCol: TMemo;
    MemoTab: TMemo;
    MemoCon: TMemo;
    GridPanel1: TGridPanel;
    LabelCol: TLabel;
    LabelTab: TLabel;
    LabelCon: TLabel;
    Label1: TLabel;
    MemoResposta: TMemo;
    Button1: TButton;
    spQuery: TspQuery;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FTarefa1: TFTarefa1;

implementation

{$R *.dfm}

procedure TFTarefa1.Button1Click(Sender: TObject);
var
  i: Integer;
begin
  for i := 0 to MemoCol.Lines.Count - 1 do
  begin
    spQuery.spColunas.Add(MemoCol.Lines.Strings[i]);
  end;

  for i := 0 to MemoTab.Lines.Count - 1 do
  begin
    spQuery.spTabela.Add(MemoTab.Lines.Strings[i]);
  end;

  for i := 0 to MemoCon.Lines.Count - 1 do
  begin
    spQuery.spCondicoes.Add(MemoCon.Lines.Strings[i]);
  end;

  MemoResposta.Lines.Text := spQuery.GeraSQL;
end;

end.
